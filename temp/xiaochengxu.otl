[XiaoChengXu] 小程序
	[坑] 
		创建一个空项目
			微信官方工具创建项目会夹带很多东西，我们可以自己创建空文件导入。空项目目录在 <url:./filets/mini_program/empty_proj>
			用开发工具导入，导入后会提示失败，然后在生成的 project.config.json里加入appid和项目名称即可，比如：
				"appid": "wx5fb63c45ae9d8825",
				"projectname": "ui测试",
		一个页面离开后，再切回来是会保存原来的状态的
			但是用component来定义页面的话，会比page的页面闪吗？童话小程序里的考级页面就是闪的，不知道是不是这个原因
	微信公众平台 <url:https://mp.weixin.qq.com/>
	微信开放社区 <url:https://developers.weixin.qq.com/community/homepage>
	app.json 
		文档1 <url:https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html>
		文档2 <url:https://developers.weixin.qq.com/miniprogram/dev/framework/config.html#%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE>
		示例 <url:./filets/mini_program/app.json.js>
		usingComponents 全局使用的组件
	WXML 以及 组件 <url:https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/>
		wx:if <url:https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/conditional.html>
			示例：<view wx:if="{{condition}}"> True </view>
		wx:for
			默认取值用item，取key用index
			key 似乎可以直接传一下 unique
		.<scroll-view> 用来自定义下拉刷新的行为 <url:https://developers.weixin.qq.com/miniprogram/dev/component/scroll-view.html>
			paging-enabled 分页功能，增强属性，暂时不知道怎么用
			refresher-enabled 开启自定义下拉刷新
		.<text>aa</text>
		.<view>aa</view>
		直接展示头像 <open-data type="userAvatarUrl"></open-data>
		直接展示昵称 <open-data type="userNickName"></open-data>
		button <url:https://developers.weixin.qq.com/miniprogram/dev/component/button.html>
		checkbox <url:https://developers.weixin.qq.com/miniprogram/dev/component/checkbox.html>
		tabbar 官方的tabbar并没有设置成组件，而是在app.json里指定，然后通过wx.api来控制一些行为，示例:
			"tabBar": {
					"list": [
					{
							"pagePath": "pages/index/index",
							"iconPath": "media/home.png",
							"selectedIconPath" : "media/home_hl.png",
							"text": "首页"
					},
					{
							"pagePath": "pages/other/1",
							"iconPath": "media/other.png",
							"selectedIconPath" : "media/other_hl.png",
							"text": "其他"
					}
					]
		.<image> 图片 <url:https://developers.weixin.qq.com/miniprogram/dev/component/image.html>
		.<template> 模板 <url:https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/template.html>
		.<swiper> 图片轮播，图片横幅 <url:https://developers.weixin.qq.com/miniprogram/dev/component/swiper.html>
	WXSS		
		引用其他样式: @import "../../app.wxss";
	[event] 基础事件 <url:https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxml/event.html>
		tap 点击
		longpress 长按
	[Api]
		wx.getSystemInfo / wx.getSystemInfoSync / wx.getSystemInfoAsync <url:https://developers.weixin.qq.com/miniprogram/dev/api/base/system/wx.getSystemInfoSync.html>
		wx.getMenuButtonBoundingClientRect 获取胶囊按钮的尺寸 <url:https://developers.weixin.qq.com/minigame/dev/api/ui/menu/wx.getMenuButtonBoundingClientRect.html>
		wx.login <url:https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html>
		wx.showShareMenu 转发 <url:https://developers.weixin.qq.com/miniprogram/dev/api/share/wx.showShareMenu.html>
			[私密消息]
		wx.showModal 弹确认框 <url:https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showModal.html>
		DOM(WXML)
			wx.createSelectorQuery 选择DOM节点 <url:https://developers.weixin.qq.com/miniprogram/dev/api/wxml/wx.createSelectorQuery.html>
			this.createSelectorQuery() 在组件范围内选择子节点。用法同全局方法
			IntersectionObserver 推断某些节点是否可以被用户看见、有多大比例可以被用户看见。暂未研究 <url:https://developers.weixin.qq.com/miniprogram/dev/api/wxml/IntersectionObserver.html>
		网络
			普通请求 wx.request <url:https://developers.weixin.qq.com/miniprogram/dev/api/network/request/wx.request.html>
				默认GET方法，数据类型为json
			上传 wx.uploadFile 只上传一个文件 <url:https://developers.weixin.qq.com/miniprogram/dev/api/network/upload/wx.uploadFile.html>
		媒体
			[wx.chooseImage] 选择图片（比如用来上传）<url:https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.chooseImage.html>
				如果只想取路径，可用 tempFilePaths
				如果要获取路径和大小，可用 tempFiles
			[wx.chooseMessageFile] 选择文件（选择图片的扩展版）<url:https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.chooseMessageFile.html>
				选择图片无法获取文件名，而选择文件则可以
			[wx.previewImage] 预览图片 <url:https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.previewImage.html>
				好像图片不能大于1M
				https改为http好像也不管用
			[wx.previewMedia] 预览图片和视频 <url:https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.previewMedia.html>
			[wx.getImageInfo] 获取图片的详细信息 <url:https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.getImageInfo.html>
		界面
			wx.setNavigationBarTitle 设置标题 <url:https://developers.weixin.qq.com/miniprogram/dev/api/ui/navigation-bar/wx.setNavigationBarTitle.html>
			wx.showNavigationBarLoading 显示导航条加载动画，对自定义导航条无效 <url:https://developers.weixin.qq.com/miniprogram/dev/api/ui/navigation-bar/wx.showNavigationBarLoading.html>
			wx.setTabBarItem 设置tabbar的信息 <url:https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.setTabBarItem.html>
			wx.showActionSheet 弹出操作菜单 <url:https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showActionSheet.html>
				类似PC上的右键菜单，关联菜单，上下文菜单
		设备
			wx.makePhoneCall 拨打电话 <url:https://developers.weixin.qq.com/miniprogram/dev/api/device/phone/wx.makePhoneCall.html>
			wx.vibrateShort / wx.vibrateLong 振动
	数据监听器 observer <url:https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/observer.html>
	[form] 表单
		.<input> <url:https://developers.weixin.qq.com/miniprogram/dev/component/input.html>
			input也有change事件，还算好用，虽然官方文档没有列出该事件
		.<editor> <url:https://developers.weixin.qq.com/miniprogram/dev/component/editor.html>
			上下文 <url:https://developers.weixin.qq.com/miniprogram/dev/api/media/editor/EditorContext.html>
		表单提交使用 e.detail.value 取得表单的值
		选择器（小程序不使用select） <url:https://developers.weixin.qq.com/miniprogram/dev/component/picker.html>
	跳转
		wx.navigateTo <url:https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateTo.html>
		wx.redirectTo 直接替换当前页面
	[component] 自定义组件 <url:https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/>
		作为组件component生命周期,比如attached这些，要写到lifetimes里，否则无效
		作为页面的component生命周期，比如onLoad这些，要写到methods里，否则无效
		组件所在页面生命周期
			Component({
				pageLifetimes: {
					show: function() {
						// 页面被展示
					},
					hide: function() {
						// 页面被隐藏
					},
					resize: function(size) {
						// 页面尺寸变化
					}
				}
			})
		自定义方法都要写到methods里
		属性要声明到properties里，否则无效。生效的属性会合并到data中
			函数类型直接写为aa:null即可
		基础文档 <url:https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html>
			组件的接合方法，这里的<slot>组件非常好用 <url:https://developers.weixin.qq.com/s/1udXLnmi6KY2>
			数据传递（参数传递），很直观 <url:https://developers.weixin.qq.com/s/8ZhcXBme7djX>
			组件通信与事件 <url:https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/events.html>
				与react类似，基本示例 <url:https://developers.weixin.qq.com/s/DFfYSKmI6vZD>
				组件嵌套，事件冒泡层级示例 <url:https://developers.weixin.qq.com/s/UGfljKm66zZ1>
				与react组件嵌套的区别：
					react嵌套组件的事件行为完全由用户自定义，而小程序默认会按照代码展现出来的形态来呈现行为，比如这个代码 <A><B p='a' /></A>
						在react里，A组件里的B组件是否会被渲染，取决于A组件的实现逻辑，而在小程序中，B组件则会按我们所看到的形式渲染出来
			抽象节点: 类似于React里的将组件作为参数 <url:https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/generics.html>
		属性 properties 需要声明才能正常使用! 如：
			properties: {
				student : String,
				id: String,}
			属性直接通过 this.xx 引用
		属性和data在wxml里共用字段，因此取名不要冲突。如果冲突的话，则以最新更新的为准
			data里的数据通过 this.data.xx 来使用
		官方好像不再推荐 template 的方法，这是网友的介绍 <url:https://www.cnblogs.com/bushui/p/11553366.html>
	[mobx] 整合mobx
	地图插件 <url:https://developers.weixin.qq.com/miniprogram/dev/component/map.html>
		地址选择器（地图选点，地图上选地址） <url:https://lbs.qq.com/miniProgram/plugin/pluginGuide/locationPicker>
			返回的格式如下：
			address: "广东省深圳市龙华区"
			city: "深圳市"
			district: "龙华区"
			latitude: 22.714714
			longitude: 114.065689
			name: "大布头村66栋"
			province: "广东省"
		城市选择器 <url:https://lbs.qq.com/miniProgram/plugin/pluginGuide/citySelector>
			进入城市选择器
				const key = 'DSEBZ-D7AL4-WFYUZ-XDNGX-D5INK-OAB2X'; //使用在腾讯位置服务申请的key
				const referer = '店铺管理'; //调用插件的app的名称
				const hotCitys = ''; // 用户自定义的的热门城市
				wx.navigateTo({
					url: `plugin://citySelector/index?key=${key}&referer=${referer}&hotCitys=${hotCitys}`,
				})
			onShow
				const citySelector = requirePlugin('citySelector');
				const selectedCity = citySelector.getCity();
				console.log('selectedCity', selectedCity)
	自定义导航栏: 其实就是不使用系统的导航栏，然后用页面的一部分来作为自定义导航栏（与自定义tabbar类似）
		示例 <url:https://www.jianshu.com/p/5753a0e1754f>
	[pullDownRefresh]自定义下拉刷新
		coolui-scroller，功能做得比较全，下拉刷新，上拉加载，但理念不好，使用的是事件来触发<url:https://www.npmjs.com/package/coolui-scroller>
			但这个示例给自己的封装带来了很大启发
		仿手机QQ的例子 <url:https://www.cnblogs.com/aaronjs/p/9982708.html>
		例子 <url:https://blog.csdn.net/weixinericguo/article/details/109196260>
		来自简书的文章 <url:https://www.jianshu.com/p/62d5a49ec6df>
		一个代码比较精简的例子 <url:https://blog.csdn.net/abs625/article/details/91374815>
		另外一个例子 <url:https://blog.csdn.net/abs625/article/details/106237828>
	[weui] 官方组件库 <url:https://developers.weixin.qq.com/miniprogram/dev/platform-capabilities/extended/weui/>
		通过扩展库的方式引入 <url:https://blog.csdn.net/lw001x/article/details/106437947>
			另一个介绍 <url:https://blog.csdn.net/l_jd_gululu/article/details/108228311>
		tabbar <url:https://wechat-miniprogram.github.io/weui/docs/tabbar.html>
			但官方有一个自定义tabbar的文档，不知道是干什么用的
		[grid] 格子布局 <url:https://developers.weixin.qq.com/miniprogram/dev/platform-capabilities/extended/component-plus/grid.html>
	[colorui] 一个评价很高的小程序组件库 <url:https://github.com/weilanwl/ColorUI/> <url:https://www.color-ui.com/>
		官方网页demo <url:http://demo.color-ui.com/>
		一个网友的介绍 <url:https://blog.csdn.net/IT_TIfarmer/article/details/88380308>
	auth.code2Session 在服务端调用，获取用户的相关id <url:https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/login/auth.code2Session.html>
	令小程序的请求带cookie <url:https://www.cnblogs.com/jerryqi/p/9717925.html>
	资料
		一个用小程序开发校友会的博客连载 <url:https://www.cnblogs.com/cclinux1/p/14130261.html>
		官方有一个 computed 库，可以了解一下 <url:https://github.com/wechat-miniprogram/computed>
			这边直接上mobx了，就不研究这个小库了
